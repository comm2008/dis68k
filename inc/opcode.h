// Decoded Instruction Opcodes //

// The below table of "opcodes" does not correspond in any way with the Motorola 68000 instruction
// encoding. Their purpose is entirely for use with the disassembler internal i68k type.

#define OPCODE_ABCD      0
#define OPCODE_ADD       1
#define OPCODE_ADDA      2
#define OPCODE_ADDI      3
#define OPCODE_ADDQ      4
#define OPCODE_ADDX      5
#define OPCODE_AND       6
#define OPCODE_ANDI      7
#define OPCODE_ASL       8
#define OPCODE_ASR       9
#define OPCODE_BCHG     10
#define OPCODE_BCLR     11
#define OPCODE_BRA      12
#define OPCODE_BSET     13
#define OPCODE_BSR      14
#define OPCODE_BTST     15
#define OPCODE_CHK      16
#define OPCODE_CLR      17
#define OPCODE_CMP      18
#define OPCODE_CMPI     19
#define OPCODE_CMPM     20
#define OPCODE_DIVS     21
#define OPCODE_DIVU     22
#define OPCODE_EOR      23
#define OPCODE_EORI     24
#define OPCODE_EXG      25
#define OPCODE_EXT      26
#define OPCODE_ILLEGAL  27
#define OPCODE_JMP      28
#define OPCODE_JSR      29
#define OPCODE_LEA      30
#define OPCODE_LINK     31
#define OPCODE_LSL      32
#define OPCODE_LSR      33
#define OPCODE_MOVE     34
#define OPCODE_MOVEA    35
#define OPCODE_MOVEM    36
#define OPCODE_MOVEP    37
#define OPCODE_MOVEQ    38
#define OPCODE_MOVE_USP 39
#define OPCODE_NBCD     40
#define OPCODE_NEG      41
#define OPCODE_NEGX     42
#define OPCODE_NOP      43
#define OPCODE_NOT      44
#define OPCODE_ORI      45
#define OPCODE_PEA      46
#define OPCODE_RESET    47
#define OPCODE_ROL      48
#define OPCODE_ROR      49
#define OPCODE_ROXL     50
#define OPCODE_ROXR     51
#define OPCODE_RTE      52
#define OPCODE_RTR      53
#define OPCODE_RTS      54
#define OPCODE_SBCD     55
#define OPCODE_STOP     56
#define OPCODE_SUB      57
#define OPCODE_SUBI     58
#define OPCODE_SUBQ     59
#define OPCODE_SUBX     60
#define OPCODE_SWAP     61
#define OPCODE_TAS      62
#define OPCODE_TRAPV    63
#define OPCODE_TST      64
#define OPCODE_UNLK     65
